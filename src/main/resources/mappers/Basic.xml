<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thekiban.Mapper.BasicMapper">
    <!-- 세부정보 조회 -->
    <select id="SelectDetailExcel" parameterType="String" resultType="Detail">
        SELECT *
        FROM detail
        WHERE detail_type = 1
          AND detail_name = #{basic_name}
    </select>

    <select id="SelectDetail" resultType="Detail">
        SELECT *
        FROM detail
        WHERE detail_type = 1
    </select>

    <!-- 원종 갯수 조회 -->
    <select id="SelectBasicCount" resultType="int">
        SELECT COUNT(*) FROM basic
        <choose>
            <when test="basic_name != 'none'">
                WHERE basic_name = #{basic_name}
            </when>
        </choose>
    </select>

    <!-- 원종 검색 -->
    <select id="SearchBasic" resultType="Basic">
        SELECT * <!-- ,
        (SELECT COUNT(*) FROM standard s LEFT JOIN detail d ON s.detail_id = d.detail_id WHERE s.basic_id = b.basic_id AND d.detail_origin = 1 AND s.standard IS NOT NULL) AS standard_count
        -->
        FROM basic b
        <choose>
            <when test="basic_name != 'none'">
                WHERE b.basic_name = #{basic_name}
            </when>
        </choose>
        ORDER BY b.basic_id DESC
    </select>
    
    <select id="SearchFilledBasic" resultType="int">
    	SELECT distinct b.basic_id from basic a, standard b, detail c
		WHERE b.basic_id=a.basic_id 
			AND b.detail_id=c.detail_id 
			AND c.detail_spec != '기본 정보' 
			AND b.standard IS NOT NULL 
			AND b.standard != '' 
			AND a.basic_name = #{basic_name} 
		ORDER BY b.basic_id DESC;
    </select>

    <!-- 원종별 세부 정보 조회 -->
    <select id="SearchBasicDetail" parameterType="String" resultType="Detail">
        SELECT * FROM detail
        WHERE detail_type = 1 AND detail_name = #{basic_name}
    </select>

    <!-- 표시항목 조회 -->
    <select id="SelectDisplay" resultType="Display">
        SELECT * FROM display dp
        LEFT JOIN detail dt ON dp.detail_id = dt.detail_id
        WHERE dp.user_id = #{user_id} AND dp.basic_name = #{basic_name}
    </select>

    <!-- 원종별 정보값 조회 -->
    <select id="SearchBasicStandard" resultType="Standard">
        SELECT * FROM standard s
        LEFT JOIN detail d ON s.detail_id = d.detail_id
        LEFT JOIN display dp ON d.detail_id = dp.detail_id
        WHERE s.basic_id = #{basic_id} AND dp.user_id = #{user_id}
        <foreach collection="detail" item="item" open="AND (" close=")" separator="OR">
            dp.detail_id = #{item.detail_id}
        </foreach>
    </select>
    <select id="SearchBasicStandard2" resultType="Standard">
        SELECT * FROM standard s
        LEFT JOIN detail d ON s.detail_id = d.detail_id
        LEFT JOIN display dp ON d.detail_id = dp.detail_id
        WHERE dp.user_id = #{user_id} AND dp.basic_name = #{basic_name}
        ORDER BY s.basic_id DESC, s.detail_id ASC
    </select>
    
    <select id="SelectStandardByBreedId" resultType="Standard">
        SELECT * FROM standard s
        LEFT JOIN detail d ON d.detail_id = s.detail_id
        where s.breed_id = #{breed_id}
    </select>

    <!-- 재고자원 개수 -->
    <select id="SelectRemainCount" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM basicRemain
        <choose>
            <when test="basic_name != 'none'">
                WHERE basic_name = #{basic_name}
            </when>
        </choose>
    </select>

    <!-- 재고자원 검색 -->
    <select id="SearchBasicRemain" resultType="basicRemain">
        SELECT * FROM basicRemain
        <choose>
            <when test="basic_name != 'none'">
                WHERE basic_name = #{basic_name}
                ORDER BY basic_remain_id DESC
            </when>
        </choose>
    </select>

    <!-- 재고자원 검색 -->
    <select id="SearchBasicRemainByNum" resultType="basicRemain">
        SELECT * FROM basicRemain
        <choose>
            <when test="basic_name != 'none'">
                WHERE basic_name = #{basic_name}
                AND basic_remain_num = #{basic_remain_num}
            </when>
        </choose>
    </select>

    <!-- 원종 등록 -->
    <insert id="InsertBasic" parameterType="Basic">
        INSERT INTO basic
        (basic_name, create_date, modify_date)
        VALUES
        (#{basic_name}, NOW(), NOW())
        <selectKey resultType="int" keyProperty="basic_id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!-- 원종 상세 정보 등록 -->
    <insert id="InsertStandard" parameterType="java.util.ArrayList">
        <foreach collection="detail" item="item" separator=";">
            <choose>
                <when test="item.detail_title == '작물'">
                    INSERT INTO standard
                    (detail_id, basic_id, standard)
                    VALUES
                    (#{item.detail_id}, #{basic_id}, #{basic_name})
                </when>
                <when test="item.detail_title != '작물'">
                    INSERT INTO standard
                    (detail_id, basic_id)
                    VALUES
                    (#{item.detail_id}, #{basic_id})
                </when>
            </choose>
        </foreach>
    </insert>

    <insert id="InsertBasicExcel" parameterType="java.util.ArrayList">
        <foreach collection="list" item="item" separator=";">
            INSERT INTO standard
            (detail_id, basic_id, standard)
            VALUES
            (#{item.detail_id}, #{item.basic_id}, #{item.standard})
        </foreach>
    </insert>

    <insert id="InsertRemainExcel" parameterType="BasicRemain">
        INSERT INTO basicRemain
        (basic_remain_id, basic_name, basic_remain_num, basic_remain_amount, basic_remain_in, basic_remain_out, basic_remain_re, basic_remain_person,
         basic_remain_date, create_date, modify_date)
        VALUES (#{basic_remain_id}, #{basic_name}, #{basic_remain_num}, #{basic_remain_amount}, #{basic_remain_in},
                #{basic_remain_out}, #{basic_remain_re}, #{basic_remain_person}, #{basic_remain_date}, now(), now())
    </insert>

    <select id="SearchBasicExcel" resultType="Basic">
        SELECT * <!--  ,
        (SELECT COUNT(*) FROM standard s LEFT JOIN detail d ON s.detail_id = d.detail_id WHERE s.basic_id = b.basic_id AND d.detail_origin = 1 AND s.standard IS NOT NULL) AS
        standard_count
        -->
        FROM basic b
        <choose>
            <when test="basic_name != 'none'">
                WHERE b.basic_name = #{basic_name}
            </when>
        </choose>
    </select>

    <select id="SearchBasicRemainExcel" resultType="BasicRemain">
        SELECT * FROM basicRemain
        <choose>
            <when test="basic_name != 'none'">
                WHERE basic_name = #{basic_name}
            </when>
        </choose>
    </select>

    <!-- 재고 등록 -->
    <insert id="InsertRemain" parameterType="BasicRemain">
        INSERT INTO basicRemain
        (basic_remain_id, basic_name, basic_remain_num, basic_remain_amount, basic_remain_in, basic_remain_out, basic_remain_re, basic_remain_person, basic_remain_date, create_date, modify_date)
        VALUES
        (#{basic_remain_id}, #{basic_name}, #{basic_remain_num}, #{basic_remain_amount}, #{basic_remain_in}, #{basic_remain_out}, #{basic_remain_re}, #{basic_remain_person},
        #{basic_remain_date}, now(), now())
        <selectKey resultType="int" keyProperty="basic_remain_id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!-- 원종별 전체 조회 -->
    <select id="SelectBasicAll" resultType="Basic">
        SELECT *,
               (SELECT COUNT(*)
                FROM standard s
                         LEFT JOIN detail d ON s.detail_id = d.detail_id
                WHERE s.basic_id = b.basic_id
                  AND d.detail_origin = 1
                  AND s.standard IS NOT NULL) AS standard_count
        FROM basic b
        WHERE b.basic_name = #{basic_name}
        ORDER BY b.basic_id DESC
    </select>

    <!-- 원종별 정보 전체 조회 -->
    <select id="SelectBasicStandard" parameterType="int" resultType="Standard">
        SELECT *
        FROM standard
        WHERE basic_id = #{basic_id}
    </select>

    <!-- 원종 수정 -->
    <update id="UpdateBasic">
        UPDATE standard
        SET standard = #{standard}
        WHERE basic_id = #{basic_id}
          AND detail_id = #{detail_id}
    </update>

    <!-- 원종 전체 수정 -->
    <update id="UpdateAllBasic" parameterType="java.util.ArrayList">
        <foreach collection="list" item="item" separator=";">
            UPDATE standard
            SET standard = #{item.standard}
            WHERE basic_id = #{item.basic_id} AND detail_id = #{item.detail_id}
        </foreach>
    </update>

    <!-- 재고 수정 -->
    <update id="UpdateBasicRemain" parameterType="BasicRemain">
        UPDATE basicRemain
        SET ${basic_remain_name} = #{basic_remain_value}
        WHERE basic_remain_id = #{basic_remain_id}
    </update>

    <!-- 재고자원 등록 -->
    <update id="UpdateInsertBasicRemain" parameterType="BasicRemain">
        UPDATE basicRemain
        SET basic_remain_num    = #{basic_remain_num},
            basic_name = #{basic_name},
            basic_remain_amount = #{basic_remain_amount},
            basic_remain_in     = #{basic_remain_in},
            basic_remain_out    = #{basic_remain_out},
            basic_remain_re     = #{basic_remain_re},
            basic_remain_person = #{basic_remain_person},
            basic_remain_date   = #{basic_remain_date}
            ORDER BY basic_remain_id DESC LIMIT 1;
    </update>

    <!-- 첨부파일 조회 -->
    <select id="SelectUploads" parameterType="java.util.ArrayList" resultType="Uploads">
        SELECT * FROM uploads u
        LEFT JOIN basic_file bf ON u.basic_file_id = bf.basic_file_id
        LEFT JOIN basic b ON bf.basic_id = b.basic_id
        WHERE
        <foreach collection="array" item="item" open="(" close=")" separator="OR">
            b.basic_id = #{item}
        </foreach>
    </select>

    <!-- 원종 삭제 -->
    <select id="DeleteBasic" parameterType="java.util.ArrayList">
        DELETE FROM basic
        WHERE
        <foreach collection="array" item="item" open="(" close=")" separator="OR">
            basic_id = #{item}
        </foreach>
    </select>

    <!-- 원종 값 삭제 -->
    <select id="DeleteStandard" parameterType="java.util.ArrayList">
        DELETE FROM standard
        WHERE
        <foreach collection="array" item="item" open="(" close=")" separator="OR">
            basic_id = #{item}
        </foreach>
    </select>

    <!-- 표시항목 삭제 -->
    <delete id="DeleteDisplay">
        DELETE
        FROM display
        WHERE user_id = #{user_id}
          AND display_type = 1 AND basic_name = #{basic_name}
    </delete>

    <!-- 첨부파일 내용 삭제 -->
    <delete id="DeleteFile" parameterType="java.util.ArrayList">
        DELETE FROM basic_file
        WHERE
        <foreach collection="array" item="item" open="(" close=")" separator="OR">
            basic_id = #{item}
        </foreach>
    </delete>

    <!-- 첨부파일 삭제 -->
    <delete id="DeleteUploads" parameterType="java.util.ArrayList">
        DELETE FROM uploads
        WHERE
        <foreach collection="list" item="item" open="(" close=")" separator="OR">
            uploads_id = #{item.uploads_id}
        </foreach>
    </delete>

    <select id="DeleteBasicRemain" parameterType="java.util.ArrayList">
        DELETE FROM basicRemain
        WHERE
        <foreach collection="array" item="item" open="(" close=")" separator="OR">
            basic_remain_id = #{item}
        </foreach>
    </select>

    <!-- 표시항목 등록 -->
    <insert id="InsertDisplay">
        <foreach collection="detail_list" item="item" separator=";">
            INSERT INTO display
            (user_id, basic_name, detail_id, display_type)
            VALUES
            (#{user_id}, #{basic_name}, #{item}, 1)
        </foreach>
    </insert>

    <!-- 원종 상세 조회 -->
    <select id="SelectBasicDetail" parameterType="int" resultType="Basic">
        SELECT *
        FROM basic b
                 LEFT JOIN detail d ON b.basic_name = d.detail_name
                 LEFT JOIN standard s ON d.detail_id = s.detail_id
        WHERE d.detail_title = '계통명 (ID)'
          AND s.basic_id = b.basic_id
          AND b.basic_id = #{basic_id}
    </select>

    <!-- 첨부파일 목록 조회 -->
    <select id="SelectBasicFile" parameterType="int" resultType="BasicFile">
        SELECT *
        FROM basic_file bf
                 LEFT JOIN uploads u ON bf.basic_file_id = u.basic_file_id
        WHERE bf.basic_id = #{basic_id}
    </select>

    <!-- 첨부파일 내용 등록 -->
    <insert id="InsertBasicFile" parameterType="BasicFile">
        INSERT INTO basic_file
        (basic_id, basic_file_title, basic_file_contents, create_date, modify_date)
        VALUES
        (#{basic_id}, #{basic_file_title}, #{basic_file_contents}, NOW(), NOW())
        <selectKey resultType="int" keyProperty="basic_file_id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!-- 첨부파일 등록 -->
    <insert id="InsertBasicUpload" parameterType="Uploads">
        INSERT INTO uploads
            (uploads_file, uploads_origin_file, uploads_type, uploads_cat, basic_file_id, create_date, modify_date)
        VALUES (#{uploads_file}, #{uploads_origin_file}, 0, 1, #{basic_file_id}, NOW(), NOW())
    </insert>

    <!-- 첨부파일 내용 수정 -->
    <update id="UpdateBasicFile" parameterType="BasicFile">
        UPDATE basic_file
        SET basic_file_title    = #{basic_file_title},
            basic_file_contents = #{basic_file_contents},
            modify_date         = NOW()
        WHERE basic_file_id = #{basic_file_id}
    </update>

    <!-- 첨부파일 수정 -->
    <update id="UpdateBasicUpload" parameterType="Uploads">
        UPDATE uploads
        SET uploads_file        = #{uploads_file},
            uploads_origin_file = #{uploads_origin_file},
            modify_date         = NOW()
        WHERE basic_file_id = #{basic_file_id}
    </update>

    <select id="SelectBasicExcel" resultType="Basic">
        SELECT * FROM standard
        WHERE basic_id = #{basic_id}
    </select>

    <select id="SelectBRemainExcel" resultType="BasicRemain">
        SELECT * FROM basicRemain
        WHERE basic_remain_id = #{basic_remain_id}
    </select>
    
    
    <!-- 첨부파일 전체목록 조회 -->
    <select id="selectBasicFileAll" resultType="BasicFile">
        SELECT *
        FROM basic_file
    </select>
    
</mapper>